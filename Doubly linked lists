class Node:

    def __init__(self,data):
        self.data = data
        self.next = None
        self.previous = None

   # def __repr__(self):
   #     return str(self.data)

class Doubly_linked_list:
    def __init__(self):
        self.head = None
        self.tail = None


    def insert(self,data):
        new_node = Node(data)

        if self.head is None:
            self.head = new_node
            self.tail = new_node

        else:
            new_node.previous = self.tail
            self.tail.next = new_node
            self.tail= new_node


    def traverse_forward(self):
        actual_node = self.head

        while actual_node is not None:
            print(actual_node.data)
            actual_node = actual_node.next

    def traverse_backward(self):
        actual_node = self.tail

        while actual_node is not None:
            print(actual_node.data)
            actual_node = actual_node.previous



if __name__ == '__main__':
    dll = Doubly_linked_list()
    dll.insert(1)
    dll.insert(2)
    dll.insert(3)
    dll.traverse_backward()
    dll.traverse_forward()

